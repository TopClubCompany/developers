#place.content
  .row
    .span8
      #search_form
        span.header #{t('short_strings.reserve_at')} #{@place.name}
        .header_special Up to 30% off
        form
          label for="reserve_date"
          input class='dateFormatNeeded' type="text" name="reserve_date" autocomplete="off" value="#{@date}"
          label for="reserve_time"
          select name="reserve_time"
            - time_with_locale(@time).each do |time_el|
              - time_el.each do |k, v|
                - if v
                  option value=k selected="selected" #{k}
                - else
                  option value=k #{k}
          label for="number_of_people"
            nobr #{t('short_strings.number_of_people')}
          select name="number_of_people" type="text"
            - number = (params[:number_of_people] || 2)
            - (1..10).each do |i|
              - if i == number.to_i
                option value="#{i}" selected="selected" #{i}
              - else
                option value="#{i}" #{i}
          input type="submit" value="Find a table"
            .clear
      .page_content.zz itemscope="" itemtype="http://data-vocabulary.org/Review-aggregate"
        .place_img
          a.fancybox rel='gallery' href=(@place.place_image.url(:content)if @place.place_image)
            img alt="#{@place.title}" height="180" itemprop="photo" src=(@place.place_image.url(:place_show)if @place.place_image) width="240"
          ul.carousel_bullets
            - place_images = @place.all_images
            - place_images.each_with_index do |image, i|
              li data-small_image_src=image.url(:place_show) data-big_image_src=image.url(:content) class=('current' if i.zero?)
        h1 title="#{@place.title}"
          span itemprop="itemreviewed"
            = @place.title
        span.header_info
          - categories = @place.categories
          - categories.each_with_index do |category, i|
            = link_to category.title, '#'
            = ', ' if (i + 1) < categories.count
          '  ·
          - data = { trigger: 'hover', title: 'Average check', content: @place.bill.try(:title), placement: 'top' }
          = content_tag :span, class: 'pricing popoverable', data: data do
            = get_pricing @place
        .rating.rating_big.rating_topclub
          .stars
            .stars_overlay
              span itemprop="rating" itemscope="" itemtype="http://data-vocabulary.org/Rating"
                span itemprop="average"
                | из
                span itemprop="best"
            .stars_bar style=get_star_rating(@place)
            .stars_bg
          a href=root_path
            img.topclub src="/assets/topclub.png"
          .clear
          small
            span itemprop="count"
            ' #{@place.reviews.count} reviews ·
            - if signed_in?
              a#write_review href="#review_form"
                |Write a review
        - if signed_in?
          a.set_unset_favorite href=set_unset_favorite_place_path(@place) data-remote='true' data-method='post'
            #favorites
              .add_to_favorites class="#{'i_like_this_place' if current_user.favorite_place?(@place)}"
                | Add to
                br
                | favorites
        .share_btns
          - %w|fb vk tw|.each do |soc_network|
            = link_to '', '#share', class: "show_popup share", id: soc_network
        ul.place_features
          li.location
            strong
              'Location:
            = @place.location.address
          li.cuisine
            strong
              = t('words.kitchen').capitalize + ': '
            = @place.kitchens.map(&:name).join(', ')
          li.timing
            - @place.humanable_schedule.each do |time|
              = time.html_safe
              br
          #place_links
            = link_to "More detalis ›", '#'
            = link_to "View menu ›", '#place_menu', {:class => "show_popup menu"}
        .clear
        .place_desc
          h5 A few words from #{@place.title}
          .short_description.active_desc
            = truncate(@place.description, length: 100)
          .full_description
            = @place.description
          .clear
          = link_to t('words.expand'), '#', class: 'desc_expand', data: { expand: t('words.expand'), rollup: t('words.roll_up') }
        - if signed_in?
          #review_form
            = simple_form_for @review, url: review_create_path, method: 'post', wrapper: :front_reg_form, nested: true do |f|
              .line2
              h5 #{current_user.try(:first_name)}, submit a review:
              .marks
                - MarkType.all.each_slice(2) do |marks|
                  .row
                    = render partial: 'place_mark', locals: { review_form: f, marks: marks }
              = render partial: 'overall_mark', locals: { marks: [MarkType.new(name: 'overall')] }
              .clear
              a href="#"
                img.user_pic height="50" src=get_user_avatar width="50"
              = f.input :reviewable_id, as: 'hidden'
              = f.input :reviewable_type, as: 'hidden'
              = f.input :content, placeholder: t('long_strings.review_placeholder'), label: false, input_html: {rows: '0',cols: '0', id: 'review_text'}
              = f.submit "Submit review"
              .clear
              .line2
        #reviews
          - reviews = @place.reviews
          h6 All #{reviews.count} reviews for #{@place.title}
          a#sortby.sortby.dropdown-toggle data-target="#" data-toggle="dropdown" role="button"
            |Sort by
          - reviews.each do |review|
            .review itemprop="review" itemscope="" itemtype="http://schema.org/Review" style="min-height: 151px;"
              a href="#"
                img.user_pic height="32" src=get_user_avatar(review.user) width="32"
              .review_content
                a.user_link href="#"
                  span itemprop="author"
                    = user_menu_name review.user
                  '
                meta content="2012-10-21" itemprop="datePublished"
                  small.created_time_ago title=review.created_at.getutc.iso8601
                    /' Dined yesterday ·
                    = review.created_at
                  small
                    '  ·
                    a href="#" #
                    br
                  span itemprop="description"
                    = review.content
                  - can_vote = signed_in? && (review.user_id != current_user.id)
                  .review_vote
                    - %w|helpful unhelpful|.each do |usefulness|
                      a href="#{can_vote ? set_review_usefulness_path(review.id, usefulness) : ''}" class=usefulness data-method="post"
                        = usefulness
                        strong= review.votes.send(usefulness.to_sym).count
                  .ratings
                    - temp_overall_mark = Hashie::Mash.new(value: review.avg_mark, id: 0, mark_type: { title: t('words.overall') })
                    - marks = review.marks.to_a.push(temp_overall_mark)
                    - marks.each_with_index do |mark, i|
                      - if mark.mark_type.title == 'noise level'
                        .noise style="height: 20px;"
                          label= mark.mark_type.title.try(:capitalize)
                          .noise_level class="noise_#{mark.value}"
                          br
                      - else
                        div
                          label style="font-weight: #{'bold' if mark.id.zero?}"
                            = mark.mark_type.title.try(:capitalize)
                          .rating itemprop="reviewRating"
                            .stars
                              .stars_overlay
                              .stars_bar style="left: #{mark.value * 20}%"
                              .stars_bg
                            meta content=mark.value

        a.load_more data-type='reviews' data-displayed=2 data-template-id="#review_template" data-base-url="/places/#{@place.id}/more?" href="#"= t(".more")

    #sidebar.specials.span4
      h3 Special offers from #{@place.title}
      ul
        - @special_offers.each do |offer|
          li
            - offer_time = "<br/>#{t('words.time')}: #{offer.nice_offer_time}"
            - offer_title = offer.week_day.try { |week_day| week_day.day_type.title }
            - data = { trigger: 'hover', title: offer_title, content: offer.description + offer_time, placement: 'left' }
            = link_to offer.title, '#', class: 'popoverable', data: data
    #map.span4 style='width:300px; height: 300px;' *{'data-lat'=>"#{@location.split(',')[0]}", "data-lng" => "#{@location.split(',')[1]}"}
  #popups style="display:none"
    = render 'place_menu_popup'
    = render 'place_share_popup'
    = render 'links_for_share'
script type='text/html' id='review_template'
  /= render 'review'